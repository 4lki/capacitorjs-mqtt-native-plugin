{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,gFAAgF;AAChF,MAAM,OAAO,aAAc,SAAQ,SAAS;IAC1C,uEAAuE;IACvE,OAAO,CAAC,OAgBP;QACC,8BAA8B;QAC9B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,gEAAgE;QAChE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,0EAA0E;IAC1E,UAAU;QACR,gEAAgE;QAChE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,yEAAyE;IACzE,SAAS,CAAC,OAGT;QACC,8BAA8B;QAC9B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,gEAAgE;QAChE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,uEAAuE;IACvE,OAAO,CAAC,OAKP;QAOC,8BAA8B;QAC9B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,gEAAgE;QAChE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { MqttBridgePlugin } from './definitions';\n\n// Define the MqttBridgeWeb class that implements the MqttBridgePlugin interface\nexport class MqttBridgeWeb extends WebPlugin implements MqttBridgePlugin {\n  // Implement the `connect` method from the `MqttBridgePlugin` interface\n  connect(options: {\n    serverURI: string;\n    port: number;\n    clientId: string;\n    username: string;\n    password: string;\n    setCleanSession: boolean;\n    connectionTimeout: number;\n    keepAliveInterval: number;\n    setAutomaticReconnect: boolean;\n    setLastWill?: {\n      willTopic: string;\n      willPayload: string;\n      willQoS: number;\n      setRetained: boolean;\n    };\n  }): Promise<any> {\n    // Log the `options` parameter\n    console.log(options);\n    // Throw an error indicating that this method is not implemented\n    throw new Error('Method not implemented.');\n  }\n\n  // Implement the `disconnect` method from the `MqttBridgePlugin` interface\n  disconnect(): Promise<any> {\n    // Throw an error indicating that this method is not implemented\n    throw new Error('Method not implemented.');\n  }\n\n  // Implement the `subscribe` method from the `MqttBridgePlugin` interface\n  subscribe(options: {\n    topic: string;\n    qos: number;\n  }): Promise<{ topic: string; qos: number }> {\n    // Log the `options` parameter\n    console.log(options);\n    // Throw an error indicating that this method is not implemented\n    throw new Error('Method not implemented.');\n  }\n\n  // Implement the `publish` method from the `MqttBridgePlugin` interface\n  publish(options: {\n    topic: string;\n    payload: string;\n    qos: number;\n    retained: boolean;\n  }): Promise<{\n    topic: string;\n    payload: string;\n    qos: number;\n    retained: boolean;\n    messageId: any;\n  }> {\n    // Log the `options` parameter\n    console.log(options);\n    // Throw an error indicating that this method is not implemented\n    throw new Error('Method not implemented.');\n  }\n}\n"]}